name: CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy to GitHub Pages

    runs-on: ubuntu-latest

    env:
      TARGET_BRANCH: gh-pages
      PUBLIC_DIR: .book
      MDBOOK_VERSION: v0.3.5

    steps:
      - uses: actions/checkout@v1

      - name: Cache rustup
        uses: actions/cache@v1
        with:
          path: ~/.rustup
          key: ${{ runner.os }}-rustup

      - name: Cache cargo binaries
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-bin-${{ hashFiles('**/Cargo.lock') }}
          restore-key: |
            ${{ runner.os }}-cargo-bin-

      - name: Install stable Rust
        run: |
          rustup set profile default
          rustup update stable
          rustup default stable

      - name: Download mdBook
        run: >
          curl -L 
          "https://github.com/rust-lang/mdBook/releases/download/${MDBOOK_VERSION}/mdbook-${MDBOOK_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          | tar zxv

      - name: Setup worktree
        run: |
          rm -rf "${PUBLIC_DIR}"
          mkdir "${PUBLIC_DIR}"
          git worktree prune
          rm -rf ".git/worktrees/${PUBLIC_DIR}/"
          git worktree add -B "${TARGET_BRANCH}" "${PUBLIC_DIR}" "origin/${TARGET_BRANCH}"
          rm -rf "${PUBLIC_DIR}/*"

      - name: Build the book
        run: |
          ./mdbook --version # Show version info
          ./mdbook build -d __tmp_book
          cargo doc --lib --no-deps
          mv "target/doc" __tmp_book/
          cp -rp __tmp_book/* "${PUBLIC_DIR}/"
          rm -rf __tmp_book

      - name: Deploy to GitHug Page
        run: |
          cd "${PUBLIC_DIR}"
          git config --global user.email "weihanglo@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          git add --all -v
          git commit -v -m "Published on ${GITHUB_SHA:0:7} at $(date)" | tee
          git push -v -f https://${GITHUB_ACTOR}:${{ secrets.ACCESS_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git ${TARGET_BRANCH}
